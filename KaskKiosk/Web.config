<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->

<configuration>
  <configSections>
        <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <sectionGroup name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection, DotNetOpenAuth.Core">
			<section name="messaging" type="DotNetOpenAuth.Configuration.MessagingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
			<section name="reporting" type="DotNetOpenAuth.Configuration.ReportingElement, DotNetOpenAuth.Core" requirePermission="false" allowLocation="true" />
		<section name="openid" type="DotNetOpenAuth.Configuration.OpenIdElement, DotNetOpenAuth.OpenId" requirePermission="false" allowLocation="true" /><section name="oauth" type="DotNetOpenAuth.Configuration.OAuthElement, DotNetOpenAuth.OAuth" requirePermission="false" allowLocation="true" /></sectionGroup></configSections>
  <connectionStrings>
    <!-- Note: This is how we connect to the database from the web application. -->
    <!-- We use "localhost" in the connectionString because we are running the SQL Server on our local machine. -->
    <add name="DefaultConnection" providerName="System.Data.SqlClient" connectionString="Data Source=localhost;Initial Catalog=AESDatabase;Integrated Security=True;Persist Security Info=True" />
  </connectionStrings>
  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
    <add key="autoFormsAuthentication" value="false" />
    <add key="enableSimpleMembership" value="false" />
  </appSettings>

  <system.web>
    <httpRuntime targetFramework="4.5" />
    <compilation debug="true" targetFramework="4.5" />
      
    <!-- for Auth login redirect -->
    <authentication mode="Forms">
      <forms loginUrl="~/Account/Login" timeout="2880" />
    </authentication>
    
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
  
    <roleManager enabled="true" defaultProvider="SimpleRoleProvider">
        <providers>
            <clear />
            <add name="SimpleRoleProvider" type="WebMatrix.WebData.SimpleRoleProvider, WebMatrix.WebData" />
        </providers>
    </roleManager>
    <membership defaultProvider="SimpleMembershipProvider">
        <providers>
            <clear />
            <add name="SimpleMembershipProvider" type="WebMatrix.WebData.SimpleMembershipProvider, WebMatrix.WebData" />
        </providers>
    </membership>
    <sessionState mode="InProc" customProvider="DefaultSessionProvider">
        <providers>
            <add name="DefaultSessionProvider" type="System.Web.Providers.DefaultSessionStateProvider, System.Web.Providers, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" connectionStringName="DefaultConnection" />
        </providers>
    </sessionState>
  </system.web>

  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
     
  <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers></system.webServer>
  <system.serviceModel>
    <bindings>
      <basicHttpBinding>
        <binding name="BasicHttpBinding_IApplicationService" />
        <binding name="BasicHttpBinding_IApplicantService" />
        <binding name="BasicHttpBinding_IAppliedService" />
        <binding name="BasicHttpBinding_IEducationService" />
        <binding name="BasicHttpBinding_IEmployerService" />
        <binding name="BasicHttpBinding_IEmploymentService" />
        <binding name="BasicHttpBinding_IJobService" />
        <binding name="BasicHttpBinding_IJobRequirementService" />
        <binding name="BasicHttpBinding_IJobOpeningService" />
        <binding name="BasicHttpBinding_ISchoolService" />
        <binding name="BasicHttpBinding_ISkillService" />
        <binding name="BasicHttpBinding_IStoreService" />
      </basicHttpBinding>
    </bindings>
    <client>
      <endpoint address="http://localhost:1760/AESApplicationService.svc/Application"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IApplicationService"
        contract="AESApplicationServiceRef.IApplicationService" name="BasicHttpBinding_IApplicationService" />
      <endpoint address="http://localhost:1760/AESApplicationService.svc/Applicant"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IApplicantService"
        contract="AESApplicationServiceRef.IApplicantService" name="BasicHttpBinding_IApplicantService" />
      <endpoint address="http://localhost:1760/AESApplicationService.svc/Applied"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IAppliedService"
        contract="AESApplicationServiceRef.IAppliedService" name="BasicHttpBinding_IAppliedService" />
      <endpoint address="http://localhost:1760/AESApplicationService.svc/Education"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IEducationService"
        contract="AESApplicationServiceRef.IEducationService" name="BasicHttpBinding_IEducationService" />
      <endpoint address="http://localhost:1760/AESApplicationService.svc/Employer"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IEmployerService"
        contract="AESApplicationServiceRef.IEmployerService" name="BasicHttpBinding_IEmployerService" />
      <endpoint address="http://localhost:1760/AESApplicationService.svc/Employment"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IEmploymentService"
        contract="AESApplicationServiceRef.IEmploymentService" name="BasicHttpBinding_IEmploymentService" />
      <endpoint address="http://localhost:1760/AESApplicationService.svc/Job"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IJobService"
        contract="AESApplicationServiceRef.IJobService" name="BasicHttpBinding_IJobService" />
      <endpoint address="http://localhost:1760/AESApplicationService.svc/JobRequirement"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IJobRequirementService"
        contract="AESApplicationServiceRef.IJobRequirementService" name="BasicHttpBinding_IJobRequirementService" />
      <endpoint address="http://localhost:1760/AESApplicationService.svc/JobOpening"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IJobOpeningService"
        contract="AESApplicationServiceRef.IJobOpeningService" name="BasicHttpBinding_IJobOpeningService" />
      <endpoint address="http://localhost:1760/AESApplicationService.svc/School"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ISchoolService"
        contract="AESApplicationServiceRef.ISchoolService" name="BasicHttpBinding_ISchoolService" />
      <endpoint address="http://localhost:1760/AESApplicationService.svc/Skill"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_ISkillService"
        contract="AESApplicationServiceRef.ISkillService" name="BasicHttpBinding_ISkillService" />
      <endpoint address="http://localhost:1760/AESApplicationService.svc/Store"
        binding="basicHttpBinding" bindingConfiguration="BasicHttpBinding_IStoreService"
        contract="AESApplicationServiceRef.IStoreService" name="BasicHttpBinding_IStoreService" />
    </client>
  </system.serviceModel>
<system.net>
		<defaultProxy enabled="true" />
		<settings>
			<!-- This setting causes .NET to check certificate revocation lists (CRL) 
			     before trusting HTTPS certificates.  But this setting tends to not 
			     be allowed in shared hosting environments. -->
			<!--<servicePointManager checkCertificateRevocationList="true"/>-->
		</settings>
	</system.net><runtime>
		<!-- This prevents the Windows Event Log from frequently logging that HMAC1 is being used (when the other party needs it). -->
		<legacyHMACWarning enabled="0" />
	<!-- When targeting ASP.NET MVC 3, this assemblyBinding makes MVC 1 and 2 references relink
		     to MVC 3 so libraries such as DotNetOpenAuth that compile against MVC 1 will work with it.
		<assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
			<dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
				<bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
			</dependentAssembly>
		</assemblyBinding>
		 -->
  <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
   <dependentAssembly>
    <assemblyIdentity name="DotNetOpenAuth.AspNet" publicKeyToken="2780ccd10d57b246" culture="neutral" />
    <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
   </dependentAssembly>
   <dependentAssembly>
    <assemblyIdentity name="DotNetOpenAuth.Core" publicKeyToken="2780ccd10d57b246" culture="neutral" />
    <bindingRedirect oldVersion="0.0.0.0-4.3.0.0" newVersion="4.3.0.0" />
   </dependentAssembly>
   <dependentAssembly>
    <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" culture="neutral" />
    <bindingRedirect oldVersion="0.0.0.0-4.0.0.0" newVersion="4.0.0.0" />
   </dependentAssembly>
  </assemblyBinding>
</runtime><dotNetOpenAuth>
		<messaging>
			<untrustedWebRequest>
				<whitelistHosts>
					<!-- Uncomment to enable communication with localhost (should generally not activate in production!) -->
					<!--<add name="localhost" />-->
				</whitelistHosts>
			</untrustedWebRequest>
		</messaging>
		<!-- Allow DotNetOpenAuth to publish usage statistics to library authors to improve the library. -->
		<reporting enabled="true" />
	<!-- This is an optional configuration section where aspects of dotnetopenauth can be customized. --><!-- For a complete set of configuration options see http://www.dotnetopenauth.net/developers/code-snippets/configuration-options/ --><openid>
		<relyingParty>
				<security requireSsl="false">
					<!-- Uncomment the trustedProviders tag if your relying party should only accept positive assertions from a closed set of OpenID Providers. -->
					<!--<trustedProviders rejectAssertionsFromUntrustedProviders="true">
						<add endpoint="https://www.google.com/accounts/o8/ud" />
					</trustedProviders>-->
				</security>
				<behaviors>
					<!-- The following OPTIONAL behavior allows RPs to use SREG only, but be compatible
					     with OPs that use Attribute Exchange (in various formats). -->
					<add type="DotNetOpenAuth.OpenId.RelyingParty.Behaviors.AXFetchAsSregTransform, DotNetOpenAuth.OpenId.RelyingParty" />
				</behaviors>
			</relyingParty></openid></dotNetOpenAuth><uri>
		<!-- The uri section is necessary to turn on .NET 3.5 support for IDN (international domain names),
		     which is necessary for OpenID urls with unicode characters in the domain/host name.
		     It is also required to put the Uri class into RFC 3986 escaping mode, which OpenID and OAuth require. -->
		<idn enabled="All" />
		<iriParsing enabled="true" />
	</uri></configuration>
