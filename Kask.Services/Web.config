<?xml version="1.0"?>
<configuration>

  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>

  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5"/>
  </system.web>

  <system.serviceModel>
      <!--
      <diagnostics>
          <messageLogging maxMessagesToLog="30000"
                  logEntireMessage="true"
                  logMessagesAtServiceLevel="true"
                  logMalformedMessages="true"
                  logMessagesAtTransportLevel="true">
          </messageLogging>
      </diagnostics>
      -->
    <services>
      <service name="Kask.Services.AESApplicationService">
          <endpoint address="Application" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IApplicationService" />
          <endpoint address="Applicant" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IApplicantService" />
          <endpoint address="Applied" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IAppliedService" />
          <endpoint address="Assessment" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IAssessmentService" />
          <endpoint address="Education" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IEducationService" />
          <endpoint address="Employer" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IEmployerService" />
          <endpoint address="Employment" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IEmploymentService" />
          <endpoint address="Interview" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IInterviewService" />
          <endpoint address="Job" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IJobService" />
          <endpoint address="JobRequirement" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IJobRequirementService" />
          <endpoint address="JobOpening" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IJobOpeningService" />
          <endpoint address="QuestionBank" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IQuestionBankService" />
          <endpoint address="MCQuestion" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IMCQuestionService" />
          <endpoint address="MCOption" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IMCOptionService" />
          <endpoint address="SAQuestion" binding="basicHttpBinding" contract="Kask.Services.Interfaces.ISAQuestionService" />
          <endpoint address="SAResponse" binding="basicHttpBinding" contract="Kask.Services.Interfaces.ISAResponseService" />
          <endpoint address="School" binding="basicHttpBinding" contract="Kask.Services.Interfaces.ISchoolService" />
          <endpoint address="Skill" binding="basicHttpBinding" contract="Kask.Services.Interfaces.ISkillService" />
          <endpoint address="Store" binding="basicHttpBinding" contract="Kask.Services.Interfaces.IStoreService" />
        <host>
          <baseAddresses>
            <add baseAddress = "http://localhost:8080/Kask.Services/AESApplicationService.svc" />
          </baseAddresses>
        </host>
      </service>
    </services>

    <behaviors>
      <serviceBehaviors>
        <behavior>
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>

    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />

  </system.serviceModel>

  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <directoryBrowse enabled="false"/>
  </system.webServer>
    <!--
    <system.diagnostics>
        <sources>
            <source name="System.ServiceModel"
                    switchValue="Verbose, ActivityTracing"
                    propagateActivity="true" >
                <listeners>
                    <add name="xml" />
                </listeners>
            </source>
            <source name="System.ServiceModel.MessageLogging"
                    switchValue="Verbose">
                <listeners>
                    <add name="xml" />
                </listeners>
            </source>
        </sources>
        <sharedListeners>
            <add name="xml"
                 type="System.Diagnostics.XmlWriterTraceListener"
                 initializeData="e2eTraceTest.e2e" />
        </sharedListeners>
        <trace autoflush="true" />
    </system.diagnostics>
    -->
</configuration>
